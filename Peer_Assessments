# Coursera: getting and cleaning data
# Peer Assessments
# Author: Karel Heurtefeux
#----------------------------------

# set my working directory
setwd("C:/Users/Gramaille/Documents/R")

# Read training data
training_set <- read.table("UCI HAR Dataset/train/X_train.txt", sep="", header=FALSE)
training_label <- read.table("UCI HAR Dataset/train/Y_train.txt", sep="", header=FALSE)
training_subject <- read.table("UCI HAR Dataset/train/subject_train.txt", sep="", header=FALSE)

# Read test data
test_set <- read.table("UCI HAR Dataset/test/X_test.txt", header = FALSE)
test_label <- read.table("UCI HAR Dataset/test/y_test.txt", header = FALSE)
test_subject <- read.table("UCI HAR Dataset/test/subject_test.txt", header = FALSE)

## Part 1 - Merge the training and the test sets to create one data set

set_table <- rbind(training_set, test_set)
label_table <- rbind(training_label, test_label)
subject_table <- rbind(training_subject, test_subject)

#read metatdata and rename columns
data_names <- read.table("UCI HAR Dataset/features.txt")
activity_names <- read.table("UCI HAR Dataset/activity_labels.txt", header = FALSE)

colnames(set_table) <- t(data_names[2])
colnames(label_table) <- "Activity"
colnames(subject_table) <- "Subject"

# Merge sets in one single data set
data_set <- cbind(set_table, label_table, subject_table)


## Part 2 - Extracts only the measurements on the mean and standard deviation for each measurement

columns_mean_STD <- grep(".*Mean.*|.*Std.*", names(data_set), ignore.case=TRUE)
req_columns <- c(columns_mean_STD, 562, 563)
extract_data <- data_set[,req_columns]


## Part 3 - Uses descriptive activity names to name the activities in the data set

#convert Activity field type into character  
extract_data$Activity <- as.character(extract_data$Activity)
for (i in 1:6){
  extract_data$Activity[extract_data$Activity == i] <- as.character(activity_names[i,2])
}
extract_data$Activity <- as.factor(extract_data$Activity)

## Part 4 - Appropriately labels the data set with descriptive variable names.

names(extract_data)<-gsub("Acc", "Accelerometer", names(extract_data))
names(extract_data)<-gsub("BodyBody", "Body", names(extract_data))
names(extract_data)<-gsub("Gyro", "Gyroscope", names(extract_data))
names(extract_data)<-gsub("^t", "Time", names(extract_data))
names(extract_data)<-gsub("^f", "Frequency", names(extract_data))
names(extract_data)<-gsub("Mag", "Magnitude", names(extract_data))
names(extract_data)<-gsub("tBody", "Time_Body", names(extract_data))
names(extract_data)<-gsub("angle", "Angle", names(extract_data))
names(extract_data)<-gsub("gravity", "Gravity", names(extract_data))
names(extract_data)<-gsub("-mean()", "Mean", names(extract_data), ignore.case = TRUE)
names(extract_data)<-gsub("-std()", "STD", names(extract_data), ignore.case = TRUE)
names(extract_data)<-gsub("-freq()", "Frequency", names(extract_data), ignore.case = TRUE)


## Part 5 - From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.

extract_data$Subject <- as.factor(extract_data$Subject)

tidy <- aggregate(. ~Subject + Activity, extract_data, mean)
tidy <- tidy[order(tidy$Subject,tidy$Activity),]
write.table(tidy, file = "tidy_data.txt", row.names = FALSE)
